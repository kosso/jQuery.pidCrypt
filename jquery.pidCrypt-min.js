/**
 *
 * jQuery plugin to impliment the pidCrypt library
 * RSA public key and AES-CBC symmetric encryption
 * supported
 *
 * Author: Jason Gerfen
 * Email: jason.gerfen@gmail.com
 * Project: http://www.github.com/jas-/jQuery.pidCrypt/
 * Copyright: Jason Gerfen
 * License: GPL
 *
 */

(function($){function certParser(cert){var lines=cert.split('\n');var read=false;var b64=false;var end=false;var flag='';var retObj={};retObj.info='';retObj.salt='';retObj.iv;retObj.b64='';retObj.aes=false;retObj.mode='';retObj.bits=0;for(var i=0;i<lines.length;i++){flag=lines[i].substr(0,9);if(i==1&&flag!='Proc-Type'&&flag.indexOf('M')==0)b64=true;switch(flag){case'-----BEGI':read=true;break;case'Proc-Type':if(read)retObj.info=lines[i];break;case'DEK-Info:':if(read){var tmp=lines[i].split(',');var dek=tmp[0].split(': ');var aes=dek[1].split('-');retObj.aes=(aes[0]=='AES')?true:false;retObj.mode=aes[2];retObj.bits=parseInt(aes[1]);retObj.salt=tmp[1].substr(0,16);retObj.iv=tmp[1];}break;case'':if(read)b64=true;break;case'-----END ':if(read){b64=false;read=false;}break;default:if(read&&b64)retObj.b64+=pidCryptUtil.stripLineFeeds(lines[i]);}}return retObj;}function genKey(len){var chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXYZ1234567890';var key='';for(x=0;x<len;x++){i=Math.floor(Math.random()*62);key+=chars.charAt(i);}return key;}function setKey(type,name,key){var x=false;type=(validateStorage(type))?type:'cookie';switch(type){case'localStorage':x=setLocal(name,key);case'sessionStorage':x=setSession(name,key);case'cookie':x=setCookie(name,key);default:x=setLocal(name,key);}return x;}function getKey(type,name){var x=false;type=(validateStorage(type))?type:'cookie';switch(type){case'localStorage':x=getLocal(name);case'sessionStorage':x=getSession(name);case'cookie':x=getCookie(name);default:x=getLocal(name);}return x;}function setLocal(name,key){return(localStorage.setItem(name+'-key',key))?true:false;}function setSession(name,key){return(sessionStorage.setItem(name+'-key',key))?true:false;}function setCookie(name,key){if(typeof $.cookie=='function'){return($.cookie(name+'-key',key,{expires:7}))?true:false;}else{return false;}}function getLocal(name){return(localStorage.getItem(name+'-key'))?localStorage.getItem(name+'-key'):false;}function getSession(name){return(sessionStorage.getItem(name+'-key'))?sessionStorage.getItem(name+'-key'):false;}function getCookie(name){if(typeof $.cookie=='function'){return($.cookie(name+'-key'))?$.cookie(name+'-key'):false;}else{return false;}}function updateFormEnc(data){$.each(data,function(k,v){if(typeof v=='object'){var x='';$.each(v,function(a,b){x+=b;});}v=(x)?x:v;if(validateElement(k+'-enc')==true){$('#'+k+'-enc').html(v);}});}function updateFormDenc(data,options){if(options.debug==true){genDebug(data,'Data after processing','<hr/>');}$.each(data,function(k,v){if(validateElement(k+'-denc')==true){$('#'+k+'-denc').html(v);}});}function validateElement(element){return(($('#'+element))&&($('#'+element).length>0))?true:false;}function validateString(string){return((string=='false')||(string.length==0)||(!string)||(string==null)||(string=='')||(typeof string=='undefined'))?false:true;}function validateStorage(type){return((window.type)&&(typeof type=='function'))?true:false;}function strLength(name,str,options){return(parseInt(str.length)>80)?strSplit(name,str):str;}function strSplit(name,str){var t=str.length/80;var y=new Object();var x=0;var z=80;for(var i=0;i<t;i++){if(i>0){x=x+80;z=z+80;}if(str.slice(x,z).length>0){y[i]=str.slice(x,z);}}return y;}function encryptForm(form,options){var data={};options.bits=parseInt(options.bits);data['server-decrypt']=(options.type=='asymmetric')?true:false;data['decrypt-response']=(options.decrypt==true)?true:false;var params=certParser(decodeURIComponent(options.key));if(params.b64){var x=pidCryptUtil.decodeBase64(params.b64);var rsa=new pidCrypt();var asn=pidCrypt.ASN1.decode(pidCryptUtil.toByteArray(x));var tree=asn.toHexTree();pidCrypt.RSA.prototype.setPublicKeyFromASN(tree);}$.each($('#'+form+' :text, :password, :file, input:checkbox:checked, input:radio:checked, textarea'),function(k,v){if(validateString(v.value)!==false){var y=(options.type=='asymmetric')?strLength(v.name,v.value,options):v.value;if(typeof y=='object'){data[v.name]={};$.each(y,function(a,b){data[v.name][a]=encryptFormHelper(options,null,v.name,b,x);});}else{var aes=new pidCrypt.AES.CBC();var x=encryptSeeder(options,aes);data[v.name]=encryptFormHelper(options,aes,v.name,y,x);}}});if(options.debug==true){genDebug(data,'Cipher text before sending to server','<hr/>');}return data;}function encryptFormHelper(options,aes,nm,v,x){if(options.type=='asymmetric'){var data=(options.encode==true)?encodeURIComponent(pidCrypt.RSA.prototype.encrypt(v)):pidCrypt.RSA.prototype.encrypt(v);}else{var data=(options.encode==true)?encodeURIComponent(aes.encryptText(v,options.key,{nBits:options.bits})):aes.encryptText(v,options.key,{nBits:options.bits});}return data;}function encryptSeeder(options,aes){options.random=genKey(128);options.iv=genKey(16);var x=aes.createKeyAndIv({password:options.random,salt:options.iv,bits:options.bits});return x;}function decryptForm(response,options){var aes=new pidCrypt.AES.CBC();options.bits=parseInt(options.bits);options.iv=parseInt(options.iv);var data={};$.each(response,function(k,v){if(validateString(v)!==false){data[k]=(options.encode==true)?encodeURIComponent(aes.decryptText(pidCryptUtil.stripLineFeeds(v),options.key,{nBits:options.bits})):aes.decryptText(pidCryptUtil.stripLineFeeds(v),options.key,{nBits:options.bits});}});return data;}function requestPublicKey(options){$.ajax({data:'ssl-key=true',type:'post',url:options.proxy,success:function(response){options.key=(options.encode)?encodeURIComponent(response):response;setKey(options.storage,options.name,options.key);}});return false;}function genDebug(data,title,spacer){$('#debug').append('<h2>'+title+'</h2>');if(typeof data=='object'){$.each(data,function(k,v){if(typeof v=='object'){var x='';$.each(v,function(a,b){x+=b;});}v=(x)?x:v;$('#debug').append('<b>'+k+'</b> => '+v+'<br/><br/>');});}else{$('#debug').append(data);}$('#debug').append(spacer);}$.fn.pidCrypt=function(options){var defaults={name:'jQuery.pidCrypt',key:'',random:'',bits:256,proxy:$(this).attr('action'),form:$(this).attr('id'),storage:'localStorage',type:'asymmetric',encode:false,debug:false,decrypt:false};return this.each(function(){if(options){options=$.extend(defaults,options);}if(!options.key){options.key=getKey(options.storage,options.name);if((!options.key)&&(validateString(options.key)==false)){options.key=requestPublicKey(options);setKey(options.storage,options.name,options.key);}}if(options.debug==true){genDebug(options,'Configuration Options:<br/>','<hr/>');}$('.'+options.form).live('submit',function(e){var data=encryptForm(options.form,options);updateFormEnc(data);var denc={};$.ajax({data:data,type:$(this).attr('method'),url:options.proxy,dataType:'json',success:function(response){(options.type=='asymmetric')?updateFormDenc(response,options):updateFormDenc(decryptForm(response,options),options);}});return false;});return false;});};})(jQuery);
